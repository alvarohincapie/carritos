<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE taglib PUBLIC "-//Sun Microsystems, Inc.//DTD JSP Tag Library 1.2//EN"
                        "http://java.sun.com/dtd/web-jsptaglibrary_1_2.dtd">
<taglib>
 <tlib-version>1.0</tlib-version>
 <jsp-version>1.2</jsp-version>
 <short-name>gw</short-name>
 <uri>http://geniar.net/framework</uri>
 <!--SELECT ITEMS-->
 <tag>
  <name>selectItems</name>
  <tag-class>gwork.presentation.icefaces.view.list.GWorkSelectItems</tag-class>
  <tei-class>com.sun.faces.taglib.FacesTagExtraInfo</tei-class>
  <body-content>empty</body-content>
  <description>Add a child UISelectItems component to the UIComponent
			associated with the closed parent UIComponent custom action.</description>
  <!--ATRIBUTOS REQUERIDOS PARA LA LISTAS SIMPLES-->
  <attribute>
   <name>className</name>
   <rtexprvalue>false</rtexprvalue>
   <description>Class name used for create the list objects.
				The class should be named including the package name
				(namePackage.ClassName).</description>
  </attribute>
  <attribute>
   <name>defaultLabel</name>
   <rtexprvalue>false</rtexprvalue>
   <description>The component show a default label.</description>
  </attribute>
  <attribute>
   <name>defaultValue</name>
   <rtexprvalue>false</rtexprvalue>
   <description>The component return a default value.</description>
  </attribute>
  <attribute>
   <name>defaultDescripction</name>
   <rtexprvalue>false</rtexprvalue>
   <description>The component return a default description.</description>
  </attribute>
  <attribute>
   <name>id</name>
   <rtexprvalue>false</rtexprvalue>
   <description>Component identifier of the UISelectItem component to be
				created.</description>
  </attribute>
  <attribute>
   <name>itemDescription</name>
   <rtexprvalue>false</rtexprvalue>
   <description>Description of this option, for use in development
				tools.</description>
  </attribute>
  <attribute>
   <name>itemLabel</name>
   <rtexprvalue>false</rtexprvalue>
   <description>Label to be displayed to the user for this option.</description>
  </attribute>
  <attribute>
   <name>itemValue</name>
   <rtexprvalue>false</rtexprvalue>
   <description>Value to be returned to the server if this option is
				selected by the user.</description>
  </attribute>
  <attribute>
   <name>list</name>
   <rtexprvalue>false</rtexprvalue>
   <description>Value binding expression to a backing bean property
				bound to the component instance for the UIComponent
				created by this custom action. This attribute is a
				Object List.</description>
  </attribute>
  <!--ATRIBUTOS ADICIONALES REQUERIDOS PARA REALIZACIÓN DE FILTROS-->
  <attribute>
   <name>filterField</name>
   <rtexprvalue>false</rtexprvalue>
   <description>Key to filtered process.</description>
  </attribute>
  <attribute>
   <name>filterValue</name>
   <rtexprvalue>false</rtexprvalue>
   <description>Default filter value.</description>
  </attribute>
  <attribute>
   <name>listenTo</name>
   <rtexprvalue>false</rtexprvalue>
   <description>Indica el componente que referencia el combo secundario.
				La referencia se debe realizar de la siguiente forma:

				ComboA. (Combo Principal) ComboB. (Combo Secundario) El
				listen del combo B debe ser: listen:"forma:id_ComboA"</description>
  </attribute>
 </tag>
 <!--DATA TABLE-->
 <tag>
  <name>dataTable</name>
  <tag-class>gwork.presentation.icefaces.view.datatable.GWorkDataTable</tag-class>
  <body-content>JSP</body-content>
  <description>&lt;p&gt;Renders an HTML "table" element compliant with the HTML 401
                specification. Please consult the javadoc for &lt;code&gt;UIData&lt;/code&gt;
                to supplement this specification. If the "styleClass" attribute
                is specified, render its value as the value of the "class"
                attribute on the "table" element. Any pass-through attributes are
                also rendered on the "table" element. &lt;/p&gt;

            	&lt;p&gt;Rendering the header&lt;/p&gt;&lt;ul&gt;&lt;p&gt;If the &lt;code&gt;UIData&lt;/code&gt; component has a
                "header" facet, or
                any of the child &lt;code&gt;UIColumn&lt;/code&gt; components has a "header"
                facet, render a "thead" element. If the &lt;code&gt;UIData&lt;/code&gt;
                component has a "header" facet, encode its contents inside of "tr"
                and "th" elements, respectively. Output the value of the
                "headerClass" attribute of the &lt;code&gt;UIData&lt;/code&gt; component, if
                present, as the value of the "class" attribute on the "th".
                Output the number of child &lt;code&gt;UIColumn&lt;/code&gt; components of the
                &lt;code&gt;UIData&lt;/code&gt; component as the value of the "colspan"
                attribute on the "th". Output "colgroup" as the value of the
                "scope" attribute on the "th" element. &lt;/p&gt;

                &lt;p&gt;If any of the child &lt;code&gt;UIColumn&lt;/code&gt; components has a
                "header" facet render a "tr" element. For each
                &lt;code&gt;UIColumn&lt;/code&gt; that actually has a "header" facet, render
                it inside of a "th" element. Columns that don't have a "header"
                facet cause an empty "th" element to be rendered. Output the
                value of the "headerClass" attribute of the &lt;code&gt;UIData&lt;/code&gt;
                component, if present, as the value of the "class" attribute on
                the "th". Output "col" as the value of the "colgroup" attribute
                on the "th" element.&lt;/p&gt;

                &lt;p&gt;Close out the "thead" element.&lt;/p&gt;&lt;/ul&gt;

            	&lt;p&gt;Rendering the footer&lt;/p&gt;&lt;ul&gt;&lt;p&gt;Follow the same process as for the header,
                except replace
                "header" with "footer", "th" with "td", "thead" with "tfoot", and
                "headerClass" with "footerClass". Do not render any "scope"
                attribute for the footer.&lt;/p&gt;&lt;/ul&gt;

            	&lt;p&gt;Rendering the table body&lt;/p&gt;&lt;ul&gt;&lt;p&gt;Render a "tbody" element. Keep track
                of the result of the
                "rows" property on the &lt;code&gt;UIData&lt;/code&gt; component. Keep track
                of the number of rows we have rendered so far. Iterate through
                the rows. Set the "rowIndex" property of the &lt;code&gt;UIData&lt;/code&gt;
                component to be correct as we iterate through the rows. Stop
                rendering children and close out the "tbody" element if the
                "rowAvailable" property of the &lt;code&gt;UIData&lt;/code&gt; returned false.
                Output a "tr" element. Output the value of the "rowClasses" per
                the attribute description below. For each &lt;code&gt;UIColumn&lt;/code&gt;
                child, output a "td" element, attaching the value of the
                "columnClasses" attribute of the &lt;code&gt;UIData&lt;/code&gt; component per
                the attribute description below. Recursively encode each child of
                each &lt;code&gt;UIColumn&lt;/code&gt; child. Close out the "td" element.
                When done with the row, close out the "tr" element. When done
                with all the rows, close out the "tbody" element.&lt;/p&gt;&lt;/ul&gt;

            	&lt;p&gt;When done rendering all the rows, set the "rowIndex" property of
                the &lt;code&gt;UIData&lt;/code&gt; to -1, and close out the "table"
                element.&lt;/p&gt;</description>
  <attribute>
   <name>sortColumn</name>
   <rtexprvalue>false</rtexprvalue>
   <description>Sets column to be sort, required for sortheader
				component</description>
  </attribute>
  <attribute>
   <name>sortAscending</name>
   <rtexprvalue>false</rtexprvalue>
   <description>Sets default sort order, required for sortheader
				component</description>
  </attribute>
  <attribute>
   <name>first</name>
   <rtexprvalue>false</rtexprvalue>
   <description>Zero-relative row number of the first row to be
				displayed. If this property is set to zero, rendering
				will begin with the first row of the underlying data.</description>
  </attribute>
  <attribute>
   <name>id</name>
   <rtexprvalue>false</rtexprvalue>
   <description>The component identifier for this component. This value
				must be unique within the closest parent component that
				is a naming container.</description>
  </attribute>
  <attribute>
   <name>rendered</name>
   <rtexprvalue>false</rtexprvalue>
   <description>Flag indicating whether or not this component should be
				rendered (during Render Response Phase), or processed on
				any subsequent form submit.</description>
  </attribute>
  <attribute>
   <name>rows</name>
   <rtexprvalue>false</rtexprvalue>
   <description>The number of rows to display, starting with the one
				identified by the "first" property. If this value is set
				to zero, all available rows in the underlying data model
				will be displayed.</description>
  </attribute>
  <attribute>
   <name>value</name>
   <rtexprvalue>false</rtexprvalue>
   <description>The current value of this component.</description>
  </attribute>
  <attribute>
   <name>var</name>
   <rtexprvalue>false</rtexprvalue>
   <description>Name of a request-scope attribute under which the model
				data for the row selected by the current value of the
				"rowIndex" property (i.e. also the current value of the
				"rowData" property) will be exposed.</description>
  </attribute>
  <attribute>
   <name>bgcolor</name>
   <rtexprvalue>false</rtexprvalue>
   <description>Name or code of the background color for this table.</description>
  </attribute>
  <attribute>
   <name>border</name>
   <rtexprvalue>false</rtexprvalue>
   <description>Width (in pixels) of the border to be drawn around this
				table.</description>
  </attribute>
  <attribute>
   <name>cellpadding</name>
   <rtexprvalue>false</rtexprvalue>
   <description>Definition of how much space the user agent should leave
				between the border of each cell and its contents.</description>
  </attribute>
  <attribute>
   <name>cellspacing</name>
   <rtexprvalue>false</rtexprvalue>
   <description>Definition of how much space the user agent should leave
				between the left side of the table and the leftmost
				column, the top of the table and the top of the top side
				of the topmost row, and so on for the right and bottom
				of the table. It also specifies the amount of space to
				leave between cells.</description>
  </attribute>
  <attribute>
   <name>columnClasses</name>
   <rtexprvalue>false</rtexprvalue>
   <description>
         		&lt;p&gt;Comma-delimited list of CSS style classes that will be applied
              	to the columns of this table.  A space separated list of
	            classes may also be specified for any individual column.  If
	            the number of elements in this list is less than the number of
	            columns specified in the "columns" attribute, no "class"
	            attribute is output for each column greater than the number of
	            elements in the list.  If the number of elements in the list
	            is greater than the number of columns specified in the
	            "columns" attribute, the elements at the posisiton in the list
	            after the value of the "columns" attribute are ignored.&lt;br/&gt;
	              
	            The default classes rendered as &lt;b&gt;column1, column2, column3 ... &lt;/b&gt;
	            with incremental index.&lt;/p&gt;
            	</description>
  </attribute>
  <attribute>
   <name>dir</name>
   <rtexprvalue>false</rtexprvalue>
   <description>Direction indication for text that does not inherit
				directionality. Valid values are "LTR" (left-to-right)
				and "RTL" (right-to-left).</description>
  </attribute>
  <attribute>
   <name>footerClass</name>
   <rtexprvalue>false</rtexprvalue>
   <description>
          		&lt;p&gt;
              	Space-separated list of CSS style class(es) that will be
              	applied to any footer generated for this table.&lt;br/&gt;
              
              	The default classe rendered as &lt;b&gt;iceTblFooter&lt;/b&gt;.
           		&lt;/p&gt;
            	</description>
  </attribute>
  <attribute>
   <name>frame</name>
   <rtexprvalue>false</rtexprvalue>
   <description>Code specifying which sides of the frame surrounding
				this table will be visible. Valid values are: none (no
				sides, default value); above (top side only); below
				(bottom side only); hsides (top and bottom sides only);
				vsides (right and left sides only); lhs (left hand side
				only); rhs (right hand side only); box (all four sides);
				and border (all four sides).</description>
  </attribute>
  <attribute>
   <name>headerClass</name>
   <rtexprvalue>false</rtexprvalue>
   <description>
          		&lt;p&gt;
              	Space-separated list of CSS style class(es) that will be
              	applied to any header generated for this table.&lt;br/&gt;
              	The default classe rendered as &lt;b&gt;iceTblHeader&lt;/b&gt;.
           		&lt;/p&gt;
            	</description>
  </attribute>
  <attribute>
   <name>headerClasses</name>
   <rtexprvalue>false</rtexprvalue>
   <description>
          		&lt;p&gt;
           		This attribute can be used to define the separate style classes for the each 
           		header of the each column.&lt;br/&gt;
           		The default classes rendered as &lt;b&gt;header1, header2, header3 ... &lt;/b&gt;
          	 	with incremental index.
           		&lt;/p&gt;
            	</description>
  </attribute>
  <attribute>
   <name>lang</name>
   <rtexprvalue>false</rtexprvalue>
   <description>Code describing the language used in the generated
				markup for this component.</description>
  </attribute>
  <attribute>
   <name>onclick</name>
   <rtexprvalue>false</rtexprvalue>
   <description>Javascript code executed when a pointer button is
				clicked over this element.</description>
  </attribute>
  <attribute>
   <name>ondblclick</name>
   <rtexprvalue>false</rtexprvalue>
   <description>Javascript code executed when a pointer button is double
				clicked over this element.</description>
  </attribute>
  <attribute>
   <name>onkeydown</name>
   <rtexprvalue>false</rtexprvalue>
   <description>Javascript code executed when a key is pressed down over
				this element.</description>
  </attribute>
  <attribute>
   <name>onkeypress</name>
   <rtexprvalue>false</rtexprvalue>
   <description>Javascript code executed when a key is pressed and
				released over this element.</description>
  </attribute>
  <attribute>
   <name>onkeyup</name>
   <rtexprvalue>false</rtexprvalue>
   <description>Javascript code executed when a key is released over
				this element.</description>
  </attribute>
  <attribute>
   <name>onmousedown</name>
   <rtexprvalue>false</rtexprvalue>
   <description>Javascript code executed when a pointer button is
				pressed down over this element.</description>
  </attribute>
  <attribute>
   <name>onmousemove</name>
   <rtexprvalue>false</rtexprvalue>
   <description>Javascript code executed when a pointer button is moved
				within this element.</description>
  </attribute>
  <attribute>
   <name>onmouseout</name>
   <rtexprvalue>false</rtexprvalue>
   <description>Javascript code executed when a pointer button is moved
				away from this element.</description>
  </attribute>
  <attribute>
   <name>onmouseover</name>
   <rtexprvalue>false</rtexprvalue>
   <description>Javascript code executed when a pointer button is moved
				onto this element.</description>
  </attribute>
  <attribute>
   <name>onmouseup</name>
   <rtexprvalue>false</rtexprvalue>
   <description>Javascript code executed when a pointer button is
				released over this element.</description>
  </attribute>
  <attribute>
   <name>rowClasses</name>
   <rtexprvalue>false</rtexprvalue>
   <description>
          		&lt;p&gt;
	            Comma-delimited list of CSS style classes that will be applied
	            to the rows of this table.  A space separated list of classes
	            may also be specified for any individual row.  Thes styles are
	            applied, in turn, to each row in the table.  For example, if
	            the list has two elements, the first style class in the list
	            is applied to the first row, the second to the second row, the
	            first to the third row, the second to the fourth row, etc.  In
	            other words, we keep iterating through the list until we reach
	            the end, and then we start at the beginning again.&lt;br/&gt;
	              
	              
	            The default classes rendered as &lt;b&gt;iceTblRow1, iceTblRow2&lt;/b&gt;
	            alternatively.
           		&lt;/p&gt;
            </description>
  </attribute>
  <attribute>
   <name>rules</name>
   <rtexprvalue>false</rtexprvalue>
   <description>Code specifying which rules will appear between cells
				within this table. Valid values are: none (no rules,
				default value); groups (between row groups); rows
				(between rows only); cols (between columns only); and
				all (between all rows and columns).</description>
  </attribute>
  <attribute>
   <name>style</name>
   <rtexprvalue>false</rtexprvalue>
   <description>CSS style(s) to be applied when this component is
				rendered.</description>
  </attribute>
  <attribute>
   <name>styleClass</name>
   <rtexprvalue>false</rtexprvalue>
   <description>
          		&lt;p&gt;
              	Space-separated list of CSS style class(es) to be applied when
              	this element is rendered.  This value must be passed through
              	as the "class" attribute on generated markup.&lt;br/&gt;

              	the default class rendered as &lt;b&gt;iceDataTblOutline&lt;/b&gt;
           		&lt;/p&gt;
            </description>
  </attribute>
  <attribute>
   <name>summary</name>
   <rtexprvalue>false</rtexprvalue>
   <description>Summary of this table's purpose and structure, for user
				agents rendering to non-visual media such as speech and
				Braille.</description>
  </attribute>
  <attribute>
   <name>title</name>
   <rtexprvalue>false</rtexprvalue>
   <description>Advisory title information about markup elements
				generated for this component.</description>
  </attribute>
  <attribute>
   <name>renderedOnUserRole</name>
   <rtexprvalue>false</rtexprvalue>
   <description>If user is in given role, this component will be
				rendered normally. If not, nothing is rendered and the
				body of this tag will be skipped.</description>
  </attribute>
  <attribute>
   <name>width</name>
   <rtexprvalue>false</rtexprvalue>
   <description>Width of the entire table, for visual user agents.</description>
  </attribute>
  <attribute>
   <name>binding</name>
   <rtexprvalue>false</rtexprvalue>
   <description>The value binding expression linking this component to a
				property in a backing bean</description>
  </attribute>
  <attribute>
   <name>scrollable</name>
   <rtexprvalue>false</rtexprvalue>
   <description>When true the table body will be scrollable with the
				headers still visiable. (Note: you will also need to set
				columnWidths, and scrollHeight)</description>
  </attribute>
  <attribute>
   <name>columnWidths</name>
   <rtexprvalue>false</rtexprvalue>
   <description>Used in scrollable tables to define an absoule witdh for
				each colum. The width can be a percentage or a fixed
				pixal width. List values for each visiable column comma
				speerated. EG. 100px,200px,150px</description>
  </attribute>
  <attribute>
   <name>scrollHeight</name>
   <rtexprvalue>false</rtexprvalue>
   <description>Used in scrollable tables to define the displayed height
				of the table. Can be in pixels or percent. 200px or 50%.</description>
  </attribute>
  <!-- ATRUBUTOS AIDICONALES REQUERIDOS -->
  <attribute>
   <name>pagedBy</name>
   <rtexprvalue>false</rtexprvalue>
   <description>Is the reference pagination component that is using this
				table. Is required for selection implementation.</description>
  </attribute>
  <attribute>
   <name>selection</name>
   <rtexprvalue>false</rtexprvalue>
   <description>When is true automatically the component add a new
				column for the selection handling.</description>
  </attribute>
  <attribute>
   <name>valueBindingList</name>
   <rtexprvalue>false</rtexprvalue>
   <description>The value binding expression linking list that return
				this component to a property in a backing bean. Used
				only when the selection attribute is true.</description>
  </attribute>
 </tag>
</taglib>
